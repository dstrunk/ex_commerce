name: CI

on:
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: changeme
          POSTGRES_DB: ex_commerce_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: '1.14.4'
          otp-version: '25.3'

      - name: Cache Elixir deps
        uses: actions/cache@v3
        with:
          path: backend/deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-

      - name: Install Elixir dependencies
        working-directory: ./backend
        run: mix deps.get

      - name: Run Elixir tests
        working-directory: ./backend
        run: mix test
        env:
          MIX_ENV: test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: changeme
          POSTGRES_DB: ex_commerce_test
          POSTGRES_PORT: 5432
          POSTGRES_HOST: localhost

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Install Node.js dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Run Nuxt tests
        working-directory: ./frontend
        run: npm test
