services:
    db:
        image: postgres:13
        environment:
            POSTGRES_USER: ${POSTGRES_USER:-postgres}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
            POSTGRES_DB: ${POSTGRES_DB:-ex_commerce_dev}
        volumes:
            - postgres_data:/var/lib/postgresql/data
        ports:
            - "5432:5432"

    backend:
        build:
            context: ./backend
            dockerfile: Dockerfile
        depends_on:
            - db
        environment:
            POSTGRES_USER: ${POSTGRES_USER:-postgres}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
            POSTGRES_DB: ${POSTGRES_DB:-ex_commerce_dev}
            POSTGRES_PORT: 5432
            POSTGRES_HOST: db
            DATABASE_URL: postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-changeme}@${POSTGRES_HOST:-db}/${POSTGRES_DB:-ex_commerce_dev}
            MIX_ENV: dev
        ports:
            - "4000:4000"
        volumes:
            - ./backend:/app
            - /app/deps
            - /app/_build
        tty: true
        stdin_open: true

    frontend:
        build:
            context: ./frontend
            dockerfile: Dockerfile
        environment:
            API_URL: https://api.excommerce.test/
            WEBSOCKET_URL: wss://api.excommerce.test/
        ports:
            - "3000:3000"
            - "24678:24678"
        volumes:
            - ./frontend:/app
            - /app/node_modules
        stop_signal: SIGKILL

    nginx:
        build:
            context: ./nginx
            dockerfile: Dockerfile
        ports:
            - "80:80"
            - "443:443"
        depends_on:
            - backend
            - frontend
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
            - ./nginx/certs:/etc/nginx/certs:ro

volumes:
    postgres_data:
